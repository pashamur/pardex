table.attributes
table
table.class_name
table.attributes['id'].stats
table.attributes['id']
table
tables.attributes['id']
table.selectivity('id', '=', 45003) * 100_000
table.selectivity('id', '=', 45003)
continue
table.selectivity('id', '=', 45003)
table
continue
Message.connection.execute("SELECT * FROM messages LIMIT 1");
Message.first
continue
    end
      end
        puts sql
        end
          @connection.async_exec(sql)
        log(sql, name) do
      def execute(sql, name = nil)
::ActiveRecord::ConnectionAdapters::PostgreSQLAdapter.instance_eval do
::ActiveRecord::ConnectionAdapters::PostgreSQLAdapter.instance_methods.grep(/execute/)
::ActiveRecord::ConnectionAdapters::PostgreSQLAdapter.instance_methods
::ActiveRecord::ConnectionAdapters::PostgreSQLAdapter.methods.grep(/exec/)
::ActiveRecord::ConnectionAdapters::PostgreSQLAdapter.methods.grep(/execute/)
::ActiveRecord::ConnectionAdapters::PostgreSQLAdapter.methods
::ActiveRecord::ConnectionAdapters::PostgreSQLAdapter
Message.last
Message.first
continue
table
table.candidates
ls
table.candidates
continue
table.attributes[
table.attributes.map(&:name)
table.attributes.map(:name)
table.attributes[2].name
table.attributes.first.class
table.attributes.count
table.attributes
table.candidates
continue
table.candidates
continue
table.candidates
continue
Pardex::Table
table
table.candidates
continue
User.columns_hash["created_at"].cast_type.class.ancestors
User.columns_hash["created_at"].cast_type.class.superclass
User.columns_hash["created_at"].cast_type.class
User.columns_hash["created_at"].cast_type.class.class
User.columns_hash["created_at"].cast_type.class
User.columns_hash["created_at"].cast_type.class.superclass
User.columns_hash["created_at"].cast_type.class
User.columns_hash["created_at"]
User.columns_hash.keys
statistics[1]["most_common_vals"].gsub(/[{}]/,'').split(',')
statistics[1]["most_common_vals"].gsub('[{}]','').split(',')
statistics[4]["attname"]
statistics[4]["name"]
statistics[4]["null_frac"]
statistics[3]["null_frac"]
statistics[1]["null_frac"]
statistics[0]["null_frac"]
statistics[0]["most_common_vals"]
statistics[1]["most_common_vals"].tr('{','').tr('}','').split(',')
statistics[1]["most_common_vals"].split(',')
statistics[1]["most_common_vals"]
eval(statistics[1]["most_common_vals"])
statistics[1]["most_common_vals"]
statistics[1]["most_common_values"]
statistics[1]
statistics[0]
User.columns_hash["id"].cast_type.class.superclass
User.columns_hash["id"].cast_type.class.superclass.superclass
User.columns_hash["id"].cast_type.class.superclass
User.columns_hash["id"].cast_type.class <= Integer
User.columns_hash["id"].cast_type.class < Integer
User.columns_hash["id"].cast_type.class
User.columns_hash["id"].cast_type < Integer
User.columns_hash["id"].cast_type <= Integer
User.columns_hash["id"].cast_type.class
User.columns_hash["id"].cast_type
User.columns_hash["id"]
User.columns_hash
User.columns(:id)
User.id
statistics[0]["attname"]
statistics[0]
User.columns
User.columns_by_name
User.columns[0]
User.columns["id"]
User.columns
statistics[2]
statistics[1]
statistics[0]
statistics
Pardex::Table
continue
Pardex.class_eval { require 'pardex/table' }
`pwd`
require 'pardex/table'
a[1]
a[0]
a = klass.connection.execute "SELECT * FROM pg_stats WHERE tablename='#{klass.table_name}'"
a = _
klass.connection.execute "SELECT * FROM pg_stats WHERE tablename='#{klass.table_name}'"
klass.connection.execute "SELECT * FROM pg_statistics WHERE tablename='#{klass.table_name}'"
klass.table_name
klass
